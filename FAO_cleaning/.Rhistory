library(tidyverse)
library(readxl)
# Read in raw data
filenames <- c('input/fvs.pids.dates.csv', 'input/fvs.colnames.csv')
rownames <- read_csv(filenames[2], skip=1, col_types='cDdddddd')
fvs <- read_csv(filenames[1], skip=1) %>%
mutate(date=as.Date(date))
rm(fvs)
library(tidyverse)
library(readxl)
# Read in raw data
filenames <- c('input/fvs.pids.dates.csv', 'input/fvs.colnames.csv')
rownames <- read_csv(filenames[2], skip=1, col_types='cDdddddd')
raw_data <- read_csv(filenames[1], skip=1) %>%
mutate(date=as.Date(date))
combined <- bind_rows(rownames, fvs)
for (col in colnames(combined)[3:8]){
combined[, col] <- rnorm(nrow(combined), 0, 1)
}
rm(col, raw_data, rownames)
library(tidyverse)
library(readxl)
# Read in raw data
filenames <- c('input/fvs.pids.dates.csv', 'input/fvs.colnames.csv')
rownames <- read_csv(filenames[2], skip=1, col_types='cDdddddd')
raw_data <- read_csv(filenames[1], skip=1) %>%
mutate(date=as.Date(date))
# Generate fictional data
combined <- bind_rows(rownames, raw_data)
for (col in colnames(combined)[3:8]){
combined[, col] <- rnorm(nrow(combined), 0, 1)
}
rm(col, raw_data, rownames)
View(combined)
rm(list = ls())
library(tidyverse)
library(readxl)
# Read in raw data
filenames <- c('input/fvs.pids.dates.csv', 'input/fvs.colnames.csv')
rownames <- read_csv(filenames[2], skip=1, col_types='cDdddddd')
raw_data <- read_csv(filenames[1], skip=1) %>%
mutate(date=as.Date(date))
# Generate fictional data
raw_data <- bind_rows(rownames, raw_data)
for (col in colnames(raw_data)[3:8]){
raw_data[, col] <- rnorm(nrow(raw_data), 0, 1)
}
rm(col, raw_data, rownames)
library(tidyverse)
library(readxl)
# Read in raw data
filenames <- c('input/fvs.pids.dates.csv', 'input/fvs.colnames.csv')
rownames <- read_csv(filenames[2], skip=1, col_types='cDdddddd')
raw_data <- read_csv(filenames[1], skip=1) %>%
mutate(date=as.Date(date))
# Generate fictional data
raw_data <- bind_rows(rownames, raw_data)
for (col in colnames(raw_data)[3:8]){
raw_data[, col] <- rnorm(nrow(raw_data), 0, 1)
}
rm(col, rownames)
View(raw_data)
View(raw_data)
selected_banks <- read_excel('input/Selected_Banks.xls') %>%
select(pid=PID, bankname=`Bank Name`, ticker=Ticker) %>%
mutate(pid=str_pad(pid, 6, side='left', pad='0'))
View(selected_banks)
selected_pids <- selected_banks$pid
selected_data <- raw_data %>%
filter(pid %in% selected_pids) %>%
left_join(selected_banks, by='pid') %>%
select(pid, bankname, ticker, date, everything())
if (all(selected_banks$pid %in% selected_data$pid)){
stop('Not all selected banks succesfully extracted from data')
}
View(selected_banks)
selected_banks$pid %in% selected_data$pid
if (!all(selected_banks$pid %in% selected_data$pid)){
stop('Not all selected banks succesfully extracted from data')
}
min_date <- as.Date('2006-01-01')
max_date <- as.Date('2015-12-31')
expanded_data <- selected_data %>%
expand(pid, date=full_seq(c(min_date, max_date), 1))
result <- expanded_data %>%
left_join(selected_banks, by='pid') %>%
left_join(selected_data, by=c('pid'='pid', 'date'='date',
'bankname'='bankname', 'ticker'='ticker')) %>%
select(pid, bankname, ticker, date, everything())
rm(expanded_data, selected_data, min_date, max_date)
View(result)
maturity <- 'fvcds2'
result <- result %>%
select(pid, bankname, ticker, date, maturity)
write_csv(result, 'output/selected_data.csv')
library(tidyverse)
library(readxl)
# Read in raw data
filename <- 'input/fvs.pids.dates.csv'
rownames <- read_csv('input/fvs.colnames.csv', skip=1, col_types='cDdddddd')
raw_data <- read_csv(filename, skip=1) %>%
mutate(date=as.Date(date))
rm(list=ls())
library(tidyverse)
library(readxl)
# Read in raw data
filename <- 'input/fvs.pids.dates.csv'
raw_data <- read_csv(filename, skip=1) %>%
mutate(date=as.Date(date))
rownames <- read_csv('input/fvs.colnames.csv', skip=1, col_types='cDdddddd')
raw_data <- bind_rows(rownames, raw_data)
for (col in colnames(raw_data)[3:8]){
raw_data[, col] <- rnorm(nrow(raw_data), 0, 1)
}
rm(col, rownames)
selected_banks <- read_excel('input/Selected_Banks.xls') %>%
mutate(PID=str_pad(PID, 6, side='left', pad='0'))
select(pid=PID, bankname=`Bank Name`, ticker=Ticker) %>%
selected_pids <- selected_banks$pid
selected_banks <- read_excel('input/Selected_Banks.xls') %>%
mutate(PID=str_pad(PID, 6, side='left', pad='0')) %>%
select(pid=PID, bankname=`Bank Name`, ticker=Ticker)
selected_pids <- selected_banks$pid
selected_data <- raw_data %>%
filter(pid %in% selected_pids) %>%
left_join(selected_banks, by='pid') %>%
select(pid, bankname, ticker, date, everything())
if (!all(selected_banks$pid %in% selected_data$pid)){
stop('Not all selected banks succesfully extracted from data')
}
min_date <- as.Date('2006-01-01')
max_date <- as.Date('2015-12-31')
expanded_data <- selected_data %>%
expand(pid, date=full_seq(c(min_date, max_date), 1))
result <- expanded_data %>%
left_join(selected_banks, by='pid') %>%
left_join(selected_data, by=c('pid'='pid', 'date'='date',
'bankname'='bankname', 'ticker'='ticker')) %>%
select(pid, bankname, ticker, date, everything())
rm(expanded_data, selected_data, min_date, max_date)
min_date <- as.Date('2006-01-01')
max_date <- as.Date('2015-12-31')
expanded_data <- selected_data %>%
expand(pid, date=full_seq(c(min_date, max_date), 1))
result <- expanded_data %>%
left_join(selected_banks, by='pid') %>%
left_join(selected_data, by=c('pid'='pid', 'date'='date',
'bankname'='bankname', 'ticker'='ticker')) %>%
select(pid, bankname, ticker, date, everything())
rm(list = ls())
library(tidyverse)
library(readxl)
# Read in raw data
filename <- 'input/fvs.pids.dates.csv'
raw_data <- read_csv(filename, skip=1) %>%
mutate(date=as.Date(date))
# Generate fictional data
rownames <- read_csv('input/fvs.colnames.csv', skip=1, col_types='cDdddddd')
raw_data <- bind_rows(rownames, raw_data)
for (col in colnames(raw_data)[3:8]){
raw_data[, col] <- rnorm(nrow(raw_data), 0, 1)
}
rm(col, rownames)
# Read in selected banks
selected_banks <- read_excel('input/Selected_Banks.xls') %>%
mutate(PID=str_pad(PID, 6, side='left', pad='0')) %>%
select(pid=PID, bankname=`Bank Name`, ticker=Ticker)
# Select the relevant data
selected_pids <- selected_banks$pid
selected_data <- raw_data %>%
filter(pid %in% selected_pids) %>%
left_join(selected_banks, by='pid') %>%
select(pid, bankname, ticker, date, everything())
if (!all(selected_banks$pid %in% selected_data$pid)){
stop('Not all selected banks succesfully extracted from data')
}
# Replace missing observations with NA
min_date <- as.Date('2006-01-01')
max_date <- as.Date('2015-12-31')
expanded_data <- selected_data %>%
expand(pid, date=full_seq(c(min_date, max_date), 1))
result <- expanded_data %>%
left_join(selected_banks, by='pid') %>%
left_join(selected_data, by=c('pid'='pid', 'date'='date',
'bankname'='bankname', 'ticker'='ticker')) %>%
select(pid, bankname, ticker, date, everything())
rm(expanded_data, selected_data, min_date, max_date)
View(result)
maturity <- 'fvcds2'
result <- result %>%
select(pid, bankname, ticker, date, maturity)
View(result)
write_csv(result, 'output/selected_data.csv')
library(tidyverse)
library(readxl)
# Set script parameters
data_filename <- 'input/fvs.pids.dates.csv'
banks_filename <- 'input/Selected_Banks.xls'
output_destination <- 'output/selected_data.csv'
its_the_actual_data = FALSE
maturity <- 'fvcds2'
# Read in raw data
raw_data <- read_csv(data_filename, skip=1) %>%
mutate(date=as.Date(date))
# Generate fictional data
if (!its_the_actual_data){
rownames <- read_csv('input/fvs.colnames.csv', skip=1, col_types='cDdddddd')
raw_data <- bind_rows(rownames, raw_data)
for (col in colnames(raw_data)[3:8]){
raw_data[, col] <- rnorm(nrow(raw_data), 0, 1)
}
rm(col, rownames)
}
# Read in selected banks
selected_banks <- read_excel(banks_filename) %>%
mutate(PID=str_pad(PID, 6, side='left', pad='0')) %>%
select(pid=PID, bankname=`Bank Name`, ticker=Ticker)
# Select the relevant data
selected_pids <- selected_banks$pid
selected_data <- raw_data %>%
filter(pid %in% selected_pids) %>%
left_join(selected_banks, by='pid') %>%
select(pid, bankname, ticker, date, everything())
if (!all(selected_banks$pid %in% selected_data$pid)){
stop('Not all selected banks succesfully extracted from data')
}
# Replace missing observations with NA
min_date <- as.Date('2006-01-01')
max_date <- as.Date('2015-12-31')
expanded_data <- selected_data %>%
expand(pid, date=full_seq(c(min_date, max_date), 1))
result <- expanded_data %>%
left_join(selected_banks, by='pid') %>%
left_join(selected_data, by=c('pid'='pid', 'date'='date',
'bankname'='bankname', 'ticker'='ticker')) %>%
select(pid, bankname, ticker, date, everything())
rm(expanded_data, selected_data, min_date, max_date)
# Select desired maturity
result <- result %>%
select(pid, bankname, ticker, date, maturity)
# Write out the data
write_csv(result, output_destination)
View(result)
